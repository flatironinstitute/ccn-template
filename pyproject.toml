# Define the build system requirements for the project.
[build-system]
requires = ["setuptools", "setuptools-scm[toml]"]
build-backend = "setuptools.build_meta"

[project]
name = "ccn_template"
# we use this instead of setting version, so that setuptools_scm can dynamically
# set the version number. see notes for details
dynamic = ["version"]
authors = [
  { name="Billy Broderick", email="author@example.com" },
]
description = "Template for CCN package"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
# Optional dependencies for documentation [docs] and testing/linting [dev]:
[project.optional-dependencies]
docs = [
    'mkdocs',
    'mkdocstrings[python]',
    'mkdocs_section_index',
    'mkdocs_gen_files',
    'mkdocs_literate_nav',
    'mkdocs-gallery'
]
dev = [
    "black",                        # Code formatter
    "isort",                        # Import sorter
    "pytest",                       # Testing framework
    "flake8",                       # Code linter
    "pytest-cov",                   # Test coverage plugin for pytest
    "pydocstyle",                    # Docstrings linter
]

[project.urls]
"Homepage" = "https://github.com/flatironinstitute/ccn-template"

[tool.setuptools_scm]
write_to = "src/ccn_template/version.py"
version_scheme = 'python-simplified-semver'
local_scheme = 'no-local-version'

[tool.pytest.ini_options]
# addopts: Additional command-line options for pytest.
addopts = "--cov=ccn_template"
testpaths = ["tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:"    # Exclude from coverage
]

[tool.pydocstyle]
convention = "numpy"                   # Convention for linting (numpy, google, pep257)
match = "^(?!version\\.py$).*\\.py$"   # This matches everything that ends with .py, except for version.py